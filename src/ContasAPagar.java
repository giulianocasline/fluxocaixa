
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author giulianocasline
 */
public class ContasAPagar extends javax.swing.JInternalFrame {

    /**
     * Creates new form ContasAPagar
     */
    public ContasAPagar() {
        initComponents();
    }

    public ContasAPagar(String CodFornecedor) {
        initComponents();
        
         carregarCamposDoFormularioContas(CodFornecedor);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        gravarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        codFornecedorField = new javax.swing.JTextField();
        fornecedorField = new javax.swing.JTextField();
        documentoField = new javax.swing.JTextField();
        vencimentoField = new javax.swing.JTextField();
        numDocumentoField = new javax.swing.JTextField();
        numNotaFiscalField = new javax.swing.JTextField();
        dataField = new javax.swing.JTextField();
        valorField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("IdFitness - Inclusão de Contas a Pagar");

        jLabel1.setText("Cod Fornecedor:");

        jLabel2.setText("Fornecedor:");

        jLabel3.setText("Tipo do Documento:");

        jLabel4.setText("Num. Documento:");

        jLabel5.setText("Num. Nota Fiscal:");

        jLabel6.setText("Data da Inclusão:");

        jLabel7.setText("Vencimento:");

        jLabel8.setText("Valor:");

        gravarButton.setText("Gravar");
        gravarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravarButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        codFornecedorField.setEditable(false);
        codFornecedorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codFornecedorFieldActionPerformed(evt);
            }
        });

        valorField.setText("R$ ");
        valorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codFornecedorField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(vencimentoField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(fornecedorField))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(valorField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 152, Short.MAX_VALUE)
                                .addComponent(gravarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelarButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(dataField))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numNotaFiscalField)
                            .addComponent(numDocumentoField)
                            .addComponent(documentoField))))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(codFornecedorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vencimentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fornecedorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(documentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numDocumentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numNotaFiscalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gravarButton)
                    .addComponent(cancelarButton))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void gravarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravarButtonActionPerformed
            
            Principal.getInstance().setVisible(true);
                        
            try {
            Class.forName("com.mysql.jdbc.Driver"); //driver jdbc

            Connection con; // cria uma variavel
            con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/idfitness", "root", Configuracoes.senhaDB);// conexão com a tabela e senha

             String query; // declara uma variavel query
             PreparedStatement stmt;            
             
             if (codFornecedorField.getText().equals("")){
                            
            // cria a string para inserir no banco
            query = "INSERT INTO contaspagar (Vencimento, Fornecedor, TipoDocumento, NumDocumento, NumNotaFiscal, Data, Valor) VALUES(?,?,?,?,?,?,?)";
            
            stmt = con.prepareStatement(query); // cria o comando       
                        
             // seta os valores na string para inserção no banco           
            stmt.setString(1, vencimentoField.getText());
            stmt.setString(2, fornecedorField.getText());
            stmt.setString(3, documentoField.getText());
            stmt.setString(4, numDocumentoField.getText());
            stmt.setString(5, numNotaFiscalField.getText());
            stmt.setString(6, dataField.getText());
            stmt.setString(7, valorField.getText());
            
            stmt.executeUpdate();// executa o comando no banco de dados para salvar
            
            //fecha comando e conexão
            stmt.close();
            con.close();
            
            JOptionPane.showMessageDialog(null, "Inclusão Realizada com Sucesso!");
            
             } else{
                 
                 query = "UPDATE contaspagar SET Vencimento=?, Fornecedor=?, TipoDocumento=?, NumDocumento=?, NumNotaFiscal=?, Data=?, Valor=? WHERE CodFornecedor =?";
            
            stmt = con.prepareStatement(query); // cria o comando

            // seta os valores na string para inserção no banco
            
            stmt.setString(1, vencimentoField.getText());
            stmt.setString(2, fornecedorField.getText());
            stmt.setString(3, documentoField.getText());
            stmt.setString(4, numDocumentoField.getText());
            stmt.setString(5, numNotaFiscalField.getText());
            stmt.setString(6, dataField.getText());
            stmt.setString(7, valorField.getText());
            stmt.setString(8, codFornecedorField.getText()); 
            
            JOptionPane.showMessageDialog(null, "Atualização feita com sucesso!");
            
            stmt.executeUpdate();// executa o comando no banco de dados para salvar
            
            //fecha comando e conexão
            stmt.close();
            con.close();
            
             }
        } catch (ClassNotFoundException ex) {
            System.out.println("Não foi possivel encontrar a classe do driver");

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Ocorreu um erro de SQL");
        }
        dispose();
            
    }//GEN-LAST:event_gravarButtonActionPerformed

    private void valorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorFieldActionPerformed

    private void codFornecedorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codFornecedorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codFornecedorFieldActionPerformed

    
    public void setPosicao() {
    Dimension d = this.getDesktopPane().getSize();
    this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2); }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarButton;
    private javax.swing.JTextField codFornecedorField;
    private javax.swing.JTextField dataField;
    private javax.swing.JTextField documentoField;
    private javax.swing.JTextField fornecedorField;
    private javax.swing.JButton gravarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField numDocumentoField;
    private javax.swing.JTextField numNotaFiscalField;
    private javax.swing.JTextField valorField;
    private javax.swing.JTextField vencimentoField;
    // End of variables declaration//GEN-END:variables

    private void carregarCamposDoFormularioContas(String CodFornecedor) {
         if (CodFornecedor != null) {
        
         try {

       Class.forName("com.mysql.jdbc.Driver");


       Connection conn;

       conn = DriverManager.getConnection(

         "jdbc:mysql://127.0.0.1/idfitness", "root", Configuracoes.senhaDB);


       String sql = "SELECT * FROM contaspagar WHERE fornecedor = ?";


       PreparedStatement st = conn.prepareStatement(sql);


       st.setString(1, CodFornecedor);


       ResultSet rs = st.executeQuery();


       if (rs.next()) {


           codFornecedorField.setText(rs.getString("CodFornecedor"));

           vencimentoField.setText(rs.getString("Vencimento"));

           fornecedorField.setText(rs.getString("Fornecedor"));

           documentoField.setText(rs.getString("TipoDocumento"));

           numDocumentoField.setText(rs.getString("NumDocumento"));

           numNotaFiscalField.setText(rs.getString("NumNotaFiscal"));

           dataField.setText(rs.getString("Data"));

           valorField.setText(rs.getString("Valor"));
           
       }
             
       rs.close();
       st.close();


    } catch (ClassNotFoundException ex) {

        System.out.println("Não foi possivel encontrar a classe");


    } catch (SQLException ex) {

        System.out.println("Ocorreu um erro na SQL" + ex.getMessage());

    }

         }
    }
}
